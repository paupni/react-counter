{"version":3,"sources":["components/Counter.js","components/Buttons.js","App.js","reportWebVitals.js","index.js"],"names":["Counter","counter","fontSize","subtitle","className","style","Buttons","handleSetCounter","onClick","App","useState","setCounter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAEe,SAASA,EAAT,GAAiD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,SAChD,OACI,gCACI,oBAAIC,UAAU,QAAQC,MAAO,CAACH,SAAUA,GAAxC,SAAoDD,IACpD,4BAAIE,OCJD,SAASG,EAAT,GAA+C,IAA7BL,EAA4B,EAA5BA,QAASM,EAAmB,EAAnBA,iBACtC,OACI,gCACI,wBAAQH,UAAU,MAAMI,QAAS,kBAAMD,EAAiBN,EAAQ,IAAhE,iBACA,wBAAQG,UAAU,MAAMI,QAAS,kBAAMD,EAAiBN,EAAQ,IAAhE,iBACA,uBACA,wBAAQG,UAAU,gBAAgBI,QAAS,kBAAMD,EAAiB,IAAlE,sB,MCcGE,MAjBf,WACE,MAA8BC,mBAAS,GAAvC,mBAAOT,EAAP,KAAgBU,EAAhB,KAKA,OACE,sBAAKP,UAAU,MAAf,UACE,cAACJ,EAAD,CAASC,QAASA,EAASC,SAAU,IAAKC,SAAU,kBACpD,cAACG,EAAD,CAASL,QAASA,EAASM,iBAAkBI,QCFpCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.232c858a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Counter({counter, fontSize, subtitle}) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"digit\" style={{fontSize: fontSize}}>{counter}</h1>\r\n            <p>{subtitle}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Buttons({counter, handleSetCounter}) {\r\n    return (\r\n        <div>\r\n            <button className=\"btn\" onClick={() => handleSetCounter(counter+1)}>inc</button>\r\n            <button className=\"btn\" onClick={() => handleSetCounter(counter-1)}>dec</button>\r\n            <br />\r\n            <button className=\"btn btn-reset\" onClick={() => handleSetCounter(0)}>reset</button>\r\n        </div>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\nimport Counter from './components/Counter';\r\nimport Buttons from './components/Buttons';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [counter, setCounter] = useState(0);\r\n  // const increaseCounter = () => {\r\n  //   setCounter(counter+1);\r\n  // }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Counter counter={counter} fontSize={220} subtitle={'Click buttons'}/>\r\n      <Buttons counter={counter} handleSetCounter={setCounter}/>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}